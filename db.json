{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/img/Pasted image 20231106161254.png","path":"img/Pasted image 20231106161254.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231106161842.png","path":"img/Pasted image 20231106161842.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231106161324.png","path":"img/Pasted image 20231106161324.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231106162227.png","path":"img/Pasted image 20231106162227.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107162634.png","path":"img/Pasted image 20231107162634.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107163852.png","path":"img/Pasted image 20231107163852.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107171041.png","path":"img/Pasted image 20231107171041.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107172939.png","path":"img/Pasted image 20231107172939.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107173624.png","path":"img/Pasted image 20231107173624.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107173632.png","path":"img/Pasted image 20231107173632.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107174209.png","path":"img/Pasted image 20231107174209.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107174258.png","path":"img/Pasted image 20231107174258.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107191608.png","path":"img/Pasted image 20231107191608.png","modified":0,"renderable":0},{"_id":"source/img/Pasted image 20231107191619.png","path":"img/Pasted image 20231107191619.png","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Hexo-Github-Pages-Github-Actions-部署个人博客.md","hash":"1d8c2fcc5816673b0fe5c6645ec666deb2a8cd6a","modified":1699356884392},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1699257285342},{"_id":"source/img/Pasted image 20231106161324.png","hash":"952be5e962059d5c86b06a90a017b7ccf61504ba","modified":1699258404000},{"_id":"source/img/Pasted image 20231107162634.png","hash":"716db7271248e18d35564e4b662072762bda718e","modified":1699345594000},{"_id":"source/img/Pasted image 20231107173624.png","hash":"71e203df9f15b61c4c41ea50f41957d6f7708b16","modified":1699349784000},{"_id":"source/img/Pasted image 20231107173632.png","hash":"71e203df9f15b61c4c41ea50f41957d6f7708b16","modified":1699349792000},{"_id":"source/img/Pasted image 20231107174209.png","hash":"f6e6a68e10c9479da5ba319dc7b8cfdf5639cbe7","modified":1699350129000},{"_id":"source/img/Pasted image 20231107191608.png","hash":"fa96424c137d997bee2da1ec5c0ac8d091552140","modified":1699355768553},{"_id":"source/img/Pasted image 20231107191619.png","hash":"a88f29f8c98efc5f904bba0ee78498a5b04c3639","modified":1699355779485},{"_id":"source/img/Pasted image 20231106161842.png","hash":"a0f2be3484671e1f859e3605f812c699f7d7e995","modified":1699258722000},{"_id":"source/img/Pasted image 20231106162227.png","hash":"73440504d51aacabe82f7726441775a6fcbba6d1","modified":1699258947000},{"_id":"source/img/Pasted image 20231107163852.png","hash":"7d45a9d60f0c80c033fe459ffdcbdeb666f37217","modified":1699346332000},{"_id":"source/img/Pasted image 20231107172939.png","hash":"18eca1131c4cb4a44846bedf7b0969bd3e1a1c0c","modified":1699349379000},{"_id":"source/img/Pasted image 20231107174258.png","hash":"1ac59ab2797732c3b178df1ab10d18954f9e22a5","modified":1699350178000},{"_id":"source/img/Pasted image 20231107171041.png","hash":"ec6e14c60d108f644a3d68b0736b38d6beb63830","modified":1699348241000},{"_id":"source/img/Pasted image 20231106161254.png","hash":"ea1c04e4d4e2f37014659df9be6fda4bb044ef0c","modified":1699258374000},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1699257732812},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1699257732812},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1699257732812},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1699257732812},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1699257732000},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1699257732000},{"_id":"public/2023/11/07/hello-world/index.html","hash":"ef7cb7ac2b4a8c3f9b750e1f3d95ec2b5e7b6a2c","modified":1699358190259},{"_id":"public/archives/index.html","hash":"8bb5c56f60a1993cd17e1f9e148dad651c4979cd","modified":1699358190259},{"_id":"public/archives/2023/index.html","hash":"d71e4a5ed2152e9eb528cb4d9f18239697fb2f9e","modified":1699358190259},{"_id":"public/archives/2023/11/index.html","hash":"aec9f9b3c5d3455ff58468a59ccf9964bb2292fc","modified":1699358190259},{"_id":"public/2023/11/07/Hexo-Github-Pages-Github-Actions-部署个人博客/index.html","hash":"206eada08f8b10b936ccb9f3e4f032e6a77ad581","modified":1699358190259},{"_id":"public/index.html","hash":"7bc1166a085336360817dabf7f502e7aca93bf9d","modified":1699358190259},{"_id":"public/img/Pasted image 20231106161324.png","hash":"952be5e962059d5c86b06a90a017b7ccf61504ba","modified":1699358190259},{"_id":"public/img/Pasted image 20231107162634.png","hash":"716db7271248e18d35564e4b662072762bda718e","modified":1699358190259},{"_id":"public/img/Pasted image 20231107173624.png","hash":"71e203df9f15b61c4c41ea50f41957d6f7708b16","modified":1699358190259},{"_id":"public/img/Pasted image 20231107173632.png","hash":"71e203df9f15b61c4c41ea50f41957d6f7708b16","modified":1699358190259},{"_id":"public/img/Pasted image 20231107174209.png","hash":"f6e6a68e10c9479da5ba319dc7b8cfdf5639cbe7","modified":1699358190259},{"_id":"public/img/Pasted image 20231107191608.png","hash":"fa96424c137d997bee2da1ec5c0ac8d091552140","modified":1699358190259},{"_id":"public/img/Pasted image 20231107191619.png","hash":"a88f29f8c98efc5f904bba0ee78498a5b04c3639","modified":1699358190259},{"_id":"public/img/Pasted image 20231106161842.png","hash":"a0f2be3484671e1f859e3605f812c699f7d7e995","modified":1699358190259},{"_id":"public/img/Pasted image 20231106162227.png","hash":"73440504d51aacabe82f7726441775a6fcbba6d1","modified":1699358190259},{"_id":"public/img/Pasted image 20231107163852.png","hash":"7d45a9d60f0c80c033fe459ffdcbdeb666f37217","modified":1699358190259},{"_id":"public/img/Pasted image 20231107172939.png","hash":"18eca1131c4cb4a44846bedf7b0969bd3e1a1c0c","modified":1699358190259},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1699358190259},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1699358190259},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1699358190259},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1699358190259},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1699358190259},{"_id":"public/img/Pasted image 20231107174258.png","hash":"1ac59ab2797732c3b178df1ab10d18954f9e22a5","modified":1699358190259},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1699358190259},{"_id":"public/img/Pasted image 20231107171041.png","hash":"ec6e14c60d108f644a3d68b0736b38d6beb63830","modified":1699358190259},{"_id":"public/img/Pasted image 20231106161254.png","hash":"ea1c04e4d4e2f37014659df9be6fda4bb044ef0c","modified":1699358190259}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hexo+Github Pages + Github Actions 部署个人博客","date":"2023-11-07T09:38:25.000Z","_content":"# 一、部署Hexo\n## 1、安装Hexo\n在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。\n```\nnpm install -g hexo-cli\n```\n## 2、初始化项目\n在想要初始化项目的地方打开cmd，然后输入`hexo init xxx-blog` 以下命令，会自动生成一个新的文件夹。\n初始化后`cd xxx-blog`进入目录文件夹，`npm install`安装需要的依赖文件\n```\nhexo init xxx-blog\ncd xxx-blog\nnpm install\n```\n## 3、运行项目\n输入`hexo s`，然后打开`http://localhost:4000/`即可访问\n![](../img/Pasted%20image%2020231106161324.png)\n![](../img/Pasted%20image%2020231106161254.png)\n# 二、配置Github Pages\n# 1、新建仓库\n打开[github.com](https://github.com/)登录自己的账号后新建一个仓库，仓库名称**必须为`用户名.github.io`**\n![](../img/Pasted%20image%2020231106161842.png)![](../img/Pasted%20image%2020231107162634.png)\n输入`repository name`后直接创建即可。\n# 三、部署到Github Pages\n## 方式一、使用Github Actions\n### 1、设置部署方式\n设置Source 为 GitHub Actions\n![](../img/Pasted%20image%2020231107172939.png)\n### 2、创建工作流文件\n在hexo目录下创建`.github/workflows/pages.yml`文件。\n- 其中的`branches`如果自己的分支不是`master`的需要修改为自己的分支名。\n- `node-version`需要修改为自己的版本，可以使用命令`node --version`查看自己的版本。\n```\nname: Pages\n\non:\n  push:\n    branches:\n      - master # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 16.x\n        uses: actions/setup-node@v2\n        with:\n          node-version: '16.14.2'\n      - name: Cache NPM dependencies\n        uses: actions/cache@v2\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v2\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v2\n```\n### 3、添加文件然后部署\n使用`git` 将文件推送到服务端即可。\n若文件中没有.gitignore，需要先创建一下\n```\nnode_modules/\npackage-lock.json\nyarn.lock\npublic/\n```\n然后将文件推送到`github`仓库\n```\n# 添加修改文件到暂存区\ngit add .\n# 提交\ngit commit -m 'init commit'\n# 推送\ngit push origin\n```\n### 4、查看部署情况\n打开`Github` 仓库可以看到工作流已经完成，此时打开`https://用户名.github.io`即可看到自己的博客。\n![](../img/Pasted%20image%2020231107173632.png)\n## 方式二、使用`hexo-deployer-git`插件\n### 1、安装部署插件\n```\nnpm install hexo-deployer-git --save\n```\n### 2、配置上传路径\n在`_config.yml`中配置：\n将其中的`<username>`替换成自己的即可\n\n```\ndeploy:  \n  type: git  \n  repo: https://github.com/<username>/<username>.github.io  \n  # example, https://github.com/hexojs/hexojs.github.io  \n  branch: gh-pages\n```\n### 3、部署\n在目录中输入以下命令：\n```\nhexo clean && hexo d\n```\n如果部署失败可能是因为git的ssh没有配置好，需要配置一下。\n### 4、GithubPages设置\n打开刚刚创建的仓库，然后设置要显示的分支\n![](../img/Pasted%20image%2020231107163852.png)\n### 5、打开网页查看效果\n浏览器输入`https://用户名.github.io`，将用户名换成自己的进行访问。\n![](../img/Pasted%20image%2020231107171041.png)","source":"_posts/Hexo-Github-Pages-Github-Actions-部署个人博客.md","raw":"---\ntitle: Hexo+Github Pages + Github Actions 部署个人博客\ndate: 2023-11-07 17:38:25\ntags:\n---\n# 一、部署Hexo\n## 1、安装Hexo\n在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。\n```\nnpm install -g hexo-cli\n```\n## 2、初始化项目\n在想要初始化项目的地方打开cmd，然后输入`hexo init xxx-blog` 以下命令，会自动生成一个新的文件夹。\n初始化后`cd xxx-blog`进入目录文件夹，`npm install`安装需要的依赖文件\n```\nhexo init xxx-blog\ncd xxx-blog\nnpm install\n```\n## 3、运行项目\n输入`hexo s`，然后打开`http://localhost:4000/`即可访问\n![](../img/Pasted%20image%2020231106161324.png)\n![](../img/Pasted%20image%2020231106161254.png)\n# 二、配置Github Pages\n# 1、新建仓库\n打开[github.com](https://github.com/)登录自己的账号后新建一个仓库，仓库名称**必须为`用户名.github.io`**\n![](../img/Pasted%20image%2020231106161842.png)![](../img/Pasted%20image%2020231107162634.png)\n输入`repository name`后直接创建即可。\n# 三、部署到Github Pages\n## 方式一、使用Github Actions\n### 1、设置部署方式\n设置Source 为 GitHub Actions\n![](../img/Pasted%20image%2020231107172939.png)\n### 2、创建工作流文件\n在hexo目录下创建`.github/workflows/pages.yml`文件。\n- 其中的`branches`如果自己的分支不是`master`的需要修改为自己的分支名。\n- `node-version`需要修改为自己的版本，可以使用命令`node --version`查看自己的版本。\n```\nname: Pages\n\non:\n  push:\n    branches:\n      - master # default branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n          # If your repository depends on submodule, please see: https://github.com/actions/checkout\n          submodules: recursive\n      - name: Use Node.js 16.x\n        uses: actions/setup-node@v2\n        with:\n          node-version: '16.14.2'\n      - name: Cache NPM dependencies\n        uses: actions/cache@v2\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n      - name: Install Dependencies\n        run: npm install\n      - name: Build\n        run: npm run build\n      - name: Upload Pages artifact\n        uses: actions/upload-pages-artifact@v2\n        with:\n          path: ./public\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v2\n```\n### 3、添加文件然后部署\n使用`git` 将文件推送到服务端即可。\n若文件中没有.gitignore，需要先创建一下\n```\nnode_modules/\npackage-lock.json\nyarn.lock\npublic/\n```\n然后将文件推送到`github`仓库\n```\n# 添加修改文件到暂存区\ngit add .\n# 提交\ngit commit -m 'init commit'\n# 推送\ngit push origin\n```\n### 4、查看部署情况\n打开`Github` 仓库可以看到工作流已经完成，此时打开`https://用户名.github.io`即可看到自己的博客。\n![](../img/Pasted%20image%2020231107173632.png)\n## 方式二、使用`hexo-deployer-git`插件\n### 1、安装部署插件\n```\nnpm install hexo-deployer-git --save\n```\n### 2、配置上传路径\n在`_config.yml`中配置：\n将其中的`<username>`替换成自己的即可\n\n```\ndeploy:  \n  type: git  \n  repo: https://github.com/<username>/<username>.github.io  \n  # example, https://github.com/hexojs/hexojs.github.io  \n  branch: gh-pages\n```\n### 3、部署\n在目录中输入以下命令：\n```\nhexo clean && hexo d\n```\n如果部署失败可能是因为git的ssh没有配置好，需要配置一下。\n### 4、GithubPages设置\n打开刚刚创建的仓库，然后设置要显示的分支\n![](../img/Pasted%20image%2020231107163852.png)\n### 5、打开网页查看效果\n浏览器输入`https://用户名.github.io`，将用户名换成自己的进行访问。\n![](../img/Pasted%20image%2020231107171041.png)","slug":"Hexo-Github-Pages-Github-Actions-部署个人博客","published":1,"updated":"2023-11-07T11:34:44.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cloo9znxs0000h4n9a9ioficv","content":"<h1 id=\"一、部署Hexo\"><a href=\"#一、部署Hexo\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo\"><a href=\"#1、安装Hexo\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目\"><a href=\"#2、初始化项目\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目\"><a href=\"#3、运行项目\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问</p>\n<h1 id=\"一、部署Hexo-1\"><a href=\"#一、部署Hexo-1\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-1\"><a href=\"#1、安装Hexo-1\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-1\"><a href=\"#2、初始化项目-1\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-1\"><a href=\"#3、运行项目-1\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages\"><a href=\"#二、配置Github-Pages\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库\"><a href=\"#1、新建仓库\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages\"><a href=\"#三、部署到Github-Pages\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions\"><a href=\"#方式一、使用Github-Actions\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式\"><a href=\"#1、设置部署方式\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件\"><a href=\"#2、创建工作流文件\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署\"><a href=\"#3、添加文件然后部署\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况\"><a href=\"#4、查看部署情况\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件\"><a href=\"#方式二、使用hexo-deployer-git插件\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件\"><a href=\"#1、安装部署插件\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径\"><a href=\"#2、配置上传路径\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署\"><a href=\"#3、部署\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置\"><a href=\"#4、GithubPages设置\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果\"><a href=\"#5、打开网页查看效果\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h1 id=\"一、部署Hexo-2\"><a href=\"#一、部署Hexo-2\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-2\"><a href=\"#1、安装Hexo-2\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-2\"><a href=\"#2、初始化项目-2\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-2\"><a href=\"#3、运行项目-2\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-1\"><a href=\"#二、配置Github-Pages-1\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-1\"><a href=\"#1、新建仓库-1\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-1\"><a href=\"#三、部署到Github-Pages-1\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-1\"><a href=\"#方式一、使用Github-Actions-1\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-1\"><a href=\"#1、设置部署方式-1\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-1\"><a href=\"#2、创建工作流文件-1\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-1\"><a href=\"#3、添加文件然后部署-1\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-1\"><a href=\"#4、查看部署情况-1\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-1\"><a href=\"#方式二、使用hexo-deployer-git插件-1\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-1\"><a href=\"#1、安装部署插件-1\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-1\"><a href=\"#2、配置上传路径-1\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-1\"><a href=\"#3、部署-1\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-1\"><a href=\"#4、GithubPages设置-1\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-1\"><a href=\"#5、打开网页查看效果-1\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h1 id=\"二、配置Github-Pages-2\"><a href=\"#二、配置Github-Pages-2\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-2\"><a href=\"#1、新建仓库-2\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong></p>\n<h1 id=\"一、部署Hexo-3\"><a href=\"#一、部署Hexo-3\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-3\"><a href=\"#1、安装Hexo-3\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-3\"><a href=\"#2、初始化项目-3\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-3\"><a href=\"#3、运行项目-3\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-3\"><a href=\"#二、配置Github-Pages-3\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-3\"><a href=\"#1、新建仓库-3\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-2\"><a href=\"#三、部署到Github-Pages-2\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-2\"><a href=\"#方式一、使用Github-Actions-2\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-2\"><a href=\"#1、设置部署方式-2\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-2\"><a href=\"#2、创建工作流文件-2\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-2\"><a href=\"#3、添加文件然后部署-2\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-2\"><a href=\"#4、查看部署情况-2\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-2\"><a href=\"#方式二、使用hexo-deployer-git插件-2\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-2\"><a href=\"#1、安装部署插件-2\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-2\"><a href=\"#2、配置上传路径-2\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-2\"><a href=\"#3、部署-2\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-2\"><a href=\"#4、GithubPages设置-2\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-2\"><a href=\"#5、打开网页查看效果-2\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-3\"><a href=\"#三、部署到Github-Pages-3\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-3\"><a href=\"#方式一、使用Github-Actions-3\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-3\"><a href=\"#1、设置部署方式-3\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions</p>\n<h1 id=\"一、部署Hexo-4\"><a href=\"#一、部署Hexo-4\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-4\"><a href=\"#1、安装Hexo-4\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-4\"><a href=\"#2、初始化项目-4\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-4\"><a href=\"#3、运行项目-4\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-4\"><a href=\"#二、配置Github-Pages-4\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-4\"><a href=\"#1、新建仓库-4\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-4\"><a href=\"#三、部署到Github-Pages-4\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-4\"><a href=\"#方式一、使用Github-Actions-4\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-4\"><a href=\"#1、设置部署方式-4\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-3\"><a href=\"#2、创建工作流文件-3\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-3\"><a href=\"#3、添加文件然后部署-3\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-3\"><a href=\"#4、查看部署情况-3\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-3\"><a href=\"#方式二、使用hexo-deployer-git插件-3\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-3\"><a href=\"#1、安装部署插件-3\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-3\"><a href=\"#2、配置上传路径-3\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-3\"><a href=\"#3、部署-3\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-3\"><a href=\"#4、GithubPages设置-3\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-3\"><a href=\"#5、打开网页查看效果-3\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h3 id=\"2、创建工作流文件-4\"><a href=\"#2、创建工作流文件-4\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-4\"><a href=\"#3、添加文件然后部署-4\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-4\"><a href=\"#4、查看部署情况-4\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。</p>\n<h1 id=\"一、部署Hexo-5\"><a href=\"#一、部署Hexo-5\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-5\"><a href=\"#1、安装Hexo-5\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-5\"><a href=\"#2、初始化项目-5\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-5\"><a href=\"#3、运行项目-5\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-5\"><a href=\"#二、配置Github-Pages-5\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-5\"><a href=\"#1、新建仓库-5\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-5\"><a href=\"#三、部署到Github-Pages-5\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-5\"><a href=\"#方式一、使用Github-Actions-5\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-5\"><a href=\"#1、设置部署方式-5\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-5\"><a href=\"#2、创建工作流文件-5\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-5\"><a href=\"#3、添加文件然后部署-5\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-5\"><a href=\"#4、查看部署情况-5\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-4\"><a href=\"#方式二、使用hexo-deployer-git插件-4\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-4\"><a href=\"#1、安装部署插件-4\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-4\"><a href=\"#2、配置上传路径-4\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-4\"><a href=\"#3、部署-4\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-4\"><a href=\"#4、GithubPages设置-4\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-4\"><a href=\"#5、打开网页查看效果-4\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-5\"><a href=\"#方式二、使用hexo-deployer-git插件-5\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-5\"><a href=\"#1、安装部署插件-5\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-5\"><a href=\"#2、配置上传路径-5\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-5\"><a href=\"#3、部署-5\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-5\"><a href=\"#4、GithubPages设置-5\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支</p>\n<h1 id=\"一、部署Hexo-6\"><a href=\"#一、部署Hexo-6\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-6\"><a href=\"#1、安装Hexo-6\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-6\"><a href=\"#2、初始化项目-6\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-6\"><a href=\"#3、运行项目-6\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-6\"><a href=\"#二、配置Github-Pages-6\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-6\"><a href=\"#1、新建仓库-6\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-6\"><a href=\"#三、部署到Github-Pages-6\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-6\"><a href=\"#方式一、使用Github-Actions-6\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-6\"><a href=\"#1、设置部署方式-6\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-6\"><a href=\"#2、创建工作流文件-6\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-6\"><a href=\"#3、添加文件然后部署-6\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-6\"><a href=\"#4、查看部署情况-6\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-6\"><a href=\"#方式二、使用hexo-deployer-git插件-6\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-6\"><a href=\"#1、安装部署插件-6\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-6\"><a href=\"#2、配置上传路径-6\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-6\"><a href=\"#3、部署-6\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-6\"><a href=\"#4、GithubPages设置-6\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-5\"><a href=\"#5、打开网页查看效果-5\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h3 id=\"5、打开网页查看效果-6\"><a href=\"#5、打开网页查看效果-6\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。</p>\n<h1 id=\"一、部署Hexo-7\"><a href=\"#一、部署Hexo-7\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-7\"><a href=\"#1、安装Hexo-7\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-7\"><a href=\"#2、初始化项目-7\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-7\"><a href=\"#3、运行项目-7\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-7\"><a href=\"#二、配置Github-Pages-7\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-7\"><a href=\"#1、新建仓库-7\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-7\"><a href=\"#三、部署到Github-Pages-7\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-7\"><a href=\"#方式一、使用Github-Actions-7\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-7\"><a href=\"#1、设置部署方式-7\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-7\"><a href=\"#2、创建工作流文件-7\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-7\"><a href=\"#3、添加文件然后部署-7\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-7\"><a href=\"#4、查看部署情况-7\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-7\"><a href=\"#方式二、使用hexo-deployer-git插件-7\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-7\"><a href=\"#1、安装部署插件-7\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-7\"><a href=\"#2、配置上传路径-7\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-7\"><a href=\"#3、部署-7\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-7\"><a href=\"#4、GithubPages设置-7\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-7\"><a href=\"#5、打开网页查看效果-7\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、部署Hexo\"><a href=\"#一、部署Hexo\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo\"><a href=\"#1、安装Hexo\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目\"><a href=\"#2、初始化项目\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目\"><a href=\"#3、运行项目\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问</p>\n<h1 id=\"一、部署Hexo-1\"><a href=\"#一、部署Hexo-1\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-1\"><a href=\"#1、安装Hexo-1\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-1\"><a href=\"#2、初始化项目-1\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-1\"><a href=\"#3、运行项目-1\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages\"><a href=\"#二、配置Github-Pages\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库\"><a href=\"#1、新建仓库\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages\"><a href=\"#三、部署到Github-Pages\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions\"><a href=\"#方式一、使用Github-Actions\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式\"><a href=\"#1、设置部署方式\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件\"><a href=\"#2、创建工作流文件\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署\"><a href=\"#3、添加文件然后部署\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况\"><a href=\"#4、查看部署情况\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件\"><a href=\"#方式二、使用hexo-deployer-git插件\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件\"><a href=\"#1、安装部署插件\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径\"><a href=\"#2、配置上传路径\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署\"><a href=\"#3、部署\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置\"><a href=\"#4、GithubPages设置\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果\"><a href=\"#5、打开网页查看效果\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h1 id=\"一、部署Hexo-2\"><a href=\"#一、部署Hexo-2\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-2\"><a href=\"#1、安装Hexo-2\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-2\"><a href=\"#2、初始化项目-2\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-2\"><a href=\"#3、运行项目-2\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-1\"><a href=\"#二、配置Github-Pages-1\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-1\"><a href=\"#1、新建仓库-1\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-1\"><a href=\"#三、部署到Github-Pages-1\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-1\"><a href=\"#方式一、使用Github-Actions-1\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-1\"><a href=\"#1、设置部署方式-1\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-1\"><a href=\"#2、创建工作流文件-1\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-1\"><a href=\"#3、添加文件然后部署-1\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-1\"><a href=\"#4、查看部署情况-1\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-1\"><a href=\"#方式二、使用hexo-deployer-git插件-1\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-1\"><a href=\"#1、安装部署插件-1\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-1\"><a href=\"#2、配置上传路径-1\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-1\"><a href=\"#3、部署-1\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-1\"><a href=\"#4、GithubPages设置-1\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-1\"><a href=\"#5、打开网页查看效果-1\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h1 id=\"二、配置Github-Pages-2\"><a href=\"#二、配置Github-Pages-2\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-2\"><a href=\"#1、新建仓库-2\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong></p>\n<h1 id=\"一、部署Hexo-3\"><a href=\"#一、部署Hexo-3\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-3\"><a href=\"#1、安装Hexo-3\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-3\"><a href=\"#2、初始化项目-3\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-3\"><a href=\"#3、运行项目-3\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-3\"><a href=\"#二、配置Github-Pages-3\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-3\"><a href=\"#1、新建仓库-3\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-2\"><a href=\"#三、部署到Github-Pages-2\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-2\"><a href=\"#方式一、使用Github-Actions-2\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-2\"><a href=\"#1、设置部署方式-2\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-2\"><a href=\"#2、创建工作流文件-2\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-2\"><a href=\"#3、添加文件然后部署-2\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-2\"><a href=\"#4、查看部署情况-2\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-2\"><a href=\"#方式二、使用hexo-deployer-git插件-2\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-2\"><a href=\"#1、安装部署插件-2\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-2\"><a href=\"#2、配置上传路径-2\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-2\"><a href=\"#3、部署-2\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-2\"><a href=\"#4、GithubPages设置-2\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-2\"><a href=\"#5、打开网页查看效果-2\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-3\"><a href=\"#三、部署到Github-Pages-3\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-3\"><a href=\"#方式一、使用Github-Actions-3\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-3\"><a href=\"#1、设置部署方式-3\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions</p>\n<h1 id=\"一、部署Hexo-4\"><a href=\"#一、部署Hexo-4\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-4\"><a href=\"#1、安装Hexo-4\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-4\"><a href=\"#2、初始化项目-4\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-4\"><a href=\"#3、运行项目-4\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-4\"><a href=\"#二、配置Github-Pages-4\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-4\"><a href=\"#1、新建仓库-4\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-4\"><a href=\"#三、部署到Github-Pages-4\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-4\"><a href=\"#方式一、使用Github-Actions-4\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-4\"><a href=\"#1、设置部署方式-4\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-3\"><a href=\"#2、创建工作流文件-3\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-3\"><a href=\"#3、添加文件然后部署-3\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-3\"><a href=\"#4、查看部署情况-3\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-3\"><a href=\"#方式二、使用hexo-deployer-git插件-3\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-3\"><a href=\"#1、安装部署插件-3\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-3\"><a href=\"#2、配置上传路径-3\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-3\"><a href=\"#3、部署-3\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-3\"><a href=\"#4、GithubPages设置-3\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-3\"><a href=\"#5、打开网页查看效果-3\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h3 id=\"2、创建工作流文件-4\"><a href=\"#2、创建工作流文件-4\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-4\"><a href=\"#3、添加文件然后部署-4\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-4\"><a href=\"#4、查看部署情况-4\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。</p>\n<h1 id=\"一、部署Hexo-5\"><a href=\"#一、部署Hexo-5\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-5\"><a href=\"#1、安装Hexo-5\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-5\"><a href=\"#2、初始化项目-5\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-5\"><a href=\"#3、运行项目-5\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-5\"><a href=\"#二、配置Github-Pages-5\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-5\"><a href=\"#1、新建仓库-5\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-5\"><a href=\"#三、部署到Github-Pages-5\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-5\"><a href=\"#方式一、使用Github-Actions-5\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-5\"><a href=\"#1、设置部署方式-5\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-5\"><a href=\"#2、创建工作流文件-5\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-5\"><a href=\"#3、添加文件然后部署-5\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-5\"><a href=\"#4、查看部署情况-5\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-4\"><a href=\"#方式二、使用hexo-deployer-git插件-4\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-4\"><a href=\"#1、安装部署插件-4\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-4\"><a href=\"#2、配置上传路径-4\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-4\"><a href=\"#3、部署-4\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-4\"><a href=\"#4、GithubPages设置-4\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-4\"><a href=\"#5、打开网页查看效果-4\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-5\"><a href=\"#方式二、使用hexo-deployer-git插件-5\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-5\"><a href=\"#1、安装部署插件-5\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-5\"><a href=\"#2、配置上传路径-5\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-5\"><a href=\"#3、部署-5\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-5\"><a href=\"#4、GithubPages设置-5\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支</p>\n<h1 id=\"一、部署Hexo-6\"><a href=\"#一、部署Hexo-6\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-6\"><a href=\"#1、安装Hexo-6\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-6\"><a href=\"#2、初始化项目-6\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-6\"><a href=\"#3、运行项目-6\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-6\"><a href=\"#二、配置Github-Pages-6\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-6\"><a href=\"#1、新建仓库-6\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-6\"><a href=\"#三、部署到Github-Pages-6\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-6\"><a href=\"#方式一、使用Github-Actions-6\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-6\"><a href=\"#1、设置部署方式-6\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-6\"><a href=\"#2、创建工作流文件-6\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-6\"><a href=\"#3、添加文件然后部署-6\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-6\"><a href=\"#4、查看部署情况-6\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-6\"><a href=\"#方式二、使用hexo-deployer-git插件-6\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-6\"><a href=\"#1、安装部署插件-6\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-6\"><a href=\"#2、配置上传路径-6\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-6\"><a href=\"#3、部署-6\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-6\"><a href=\"#4、GithubPages设置-6\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-5\"><a href=\"#5、打开网页查看效果-5\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n<h3 id=\"5、打开网页查看效果-6\"><a href=\"#5、打开网页查看效果-6\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。</p>\n<h1 id=\"一、部署Hexo-7\"><a href=\"#一、部署Hexo-7\" class=\"headerlink\" title=\"一、部署Hexo\"></a>一、部署Hexo</h1><h2 id=\"1、安装Hexo-7\"><a href=\"#1、安装Hexo-7\" class=\"headerlink\" title=\"1、安装Hexo\"></a>1、安装Hexo</h2><p>在安装nodejs、和git的情况下，打开cmd，输入命令安装Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、初始化项目-7\"><a href=\"#2、初始化项目-7\" class=\"headerlink\" title=\"2、初始化项目\"></a>2、初始化项目</h2><p>在想要初始化项目的地方打开cmd，然后输入<code>hexo init xxx-blog</code> 以下命令，会自动生成一个新的文件夹。<br>初始化后<code>cd xxx-blog</code>进入目录文件夹，<code>npm install</code>安装需要的依赖文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init xxx-blog</span><br><span class=\"line\">cd xxx-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、运行项目-7\"><a href=\"#3、运行项目-7\" class=\"headerlink\" title=\"3、运行项目\"></a>3、运行项目</h2><p>输入<code>hexo s</code>，然后打开<code>http://localhost:4000/</code>即可访问<br><img src=\"img/Pasted%20image%2020231106161324.png\"><br><img src=\"img/Pasted%20image%2020231106161254.png\"></p>\n<h1 id=\"二、配置Github-Pages-7\"><a href=\"#二、配置Github-Pages-7\" class=\"headerlink\" title=\"二、配置Github Pages\"></a>二、配置Github Pages</h1><h1 id=\"1、新建仓库-7\"><a href=\"#1、新建仓库-7\" class=\"headerlink\" title=\"1、新建仓库\"></a>1、新建仓库</h1><p>打开<a href=\"https://github.com/\">github.com</a>登录自己的账号后新建一个仓库，仓库名称<strong>必须为<code>用户名.github.io</code></strong><br><img src=\"img/Pasted%20image%2020231106161842.png\"><img src=\"img/Pasted%20image%2020231107162634.png\"><br>输入<code>repository name</code>后直接创建即可。</p>\n<h1 id=\"三、部署到Github-Pages-7\"><a href=\"#三、部署到Github-Pages-7\" class=\"headerlink\" title=\"三、部署到Github Pages\"></a>三、部署到Github Pages</h1><h2 id=\"方式一、使用Github-Actions-7\"><a href=\"#方式一、使用Github-Actions-7\" class=\"headerlink\" title=\"方式一、使用Github Actions\"></a>方式一、使用Github Actions</h2><h3 id=\"1、设置部署方式-7\"><a href=\"#1、设置部署方式-7\" class=\"headerlink\" title=\"1、设置部署方式\"></a>1、设置部署方式</h3><p>设置Source 为 GitHub Actions<br><img src=\"img/Pasted%20image%2020231107172939.png\"></p>\n<h3 id=\"2、创建工作流文件-7\"><a href=\"#2、创建工作流文件-7\" class=\"headerlink\" title=\"2、创建工作流文件\"></a>2、创建工作流文件</h3><p>在hexo目录下创建<code>.github/workflows/pages.yml</code>文件。</p>\n<ul>\n<li>其中的<code>branches</code>如果自己的分支不是<code>master</code>的需要修改为自己的分支名。</li>\n<li><code>node-version</code>需要修改为自己的版本，可以使用命令<code>node --version</code>查看自己的版本。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: Pages</span><br><span class=\"line\"></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches:</span><br><span class=\"line\">      - master # default branch</span><br><span class=\"line\"></span><br><span class=\"line\">jobs:</span><br><span class=\"line\">  build:</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - uses: actions/checkout@v3</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span><br><span class=\"line\">          # If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br><span class=\"line\">          submodules: recursive</span><br><span class=\"line\">      - name: Use Node.js 16.x</span><br><span class=\"line\">        uses: actions/setup-node@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          node-version: &#x27;16.14.2&#x27;</span><br><span class=\"line\">      - name: Cache NPM dependencies</span><br><span class=\"line\">        uses: actions/cache@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: node_modules</span><br><span class=\"line\">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">          restore-keys: |</span><br><span class=\"line\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"line\">      - name: Install Dependencies</span><br><span class=\"line\">        run: npm install</span><br><span class=\"line\">      - name: Build</span><br><span class=\"line\">        run: npm run build</span><br><span class=\"line\">      - name: Upload Pages artifact</span><br><span class=\"line\">        uses: actions/upload-pages-artifact@v2</span><br><span class=\"line\">        with:</span><br><span class=\"line\">          path: ./public</span><br><span class=\"line\">  deploy:</span><br><span class=\"line\">    needs: build</span><br><span class=\"line\">    permissions:</span><br><span class=\"line\">      pages: write</span><br><span class=\"line\">      id-token: write</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      name: github-pages</span><br><span class=\"line\">      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span><br><span class=\"line\">    runs-on: ubuntu-latest</span><br><span class=\"line\">    steps:</span><br><span class=\"line\">      - name: Deploy to GitHub Pages</span><br><span class=\"line\">        id: deployment</span><br><span class=\"line\">        uses: actions/deploy-pages@v2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3、添加文件然后部署-7\"><a href=\"#3、添加文件然后部署-7\" class=\"headerlink\" title=\"3、添加文件然后部署\"></a>3、添加文件然后部署</h3><p>使用<code>git</code> 将文件推送到服务端即可。<br>若文件中没有.gitignore，需要先创建一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules/</span><br><span class=\"line\">package-lock.json</span><br><span class=\"line\">yarn.lock</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<p>然后将文件推送到<code>github</code>仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加修改文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\"># 提交</span><br><span class=\"line\">git commit -m &#x27;init commit&#x27;</span><br><span class=\"line\"># 推送</span><br><span class=\"line\">git push origin</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、查看部署情况-7\"><a href=\"#4、查看部署情况-7\" class=\"headerlink\" title=\"4、查看部署情况\"></a>4、查看部署情况</h3><p>打开<code>Github</code> 仓库可以看到工作流已经完成，此时打开<code>https://用户名.github.io</code>即可看到自己的博客。<br><img src=\"img/Pasted%20image%2020231107173632.png\"></p>\n<h2 id=\"方式二、使用hexo-deployer-git插件-7\"><a href=\"#方式二、使用hexo-deployer-git插件-7\" class=\"headerlink\" title=\"方式二、使用hexo-deployer-git插件\"></a>方式二、使用<code>hexo-deployer-git</code>插件</h2><h3 id=\"1、安装部署插件-7\"><a href=\"#1、安装部署插件-7\" class=\"headerlink\" title=\"1、安装部署插件\"></a>1、安装部署插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、配置上传路径-7\"><a href=\"#2、配置上传路径-7\" class=\"headerlink\" title=\"2、配置上传路径\"></a>2、配置上传路径</h3><p>在<code>_config.yml</code>中配置：<br>将其中的<code>&lt;username&gt;</code>替换成自己的即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:  </span><br><span class=\"line\">  type: git  </span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io  </span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io  </span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、部署-7\"><a href=\"#3、部署-7\" class=\"headerlink\" title=\"3、部署\"></a>3、部署</h3><p>在目录中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<p>如果部署失败可能是因为git的ssh没有配置好，需要配置一下。</p>\n<h3 id=\"4、GithubPages设置-7\"><a href=\"#4、GithubPages设置-7\" class=\"headerlink\" title=\"4、GithubPages设置\"></a>4、GithubPages设置</h3><p>打开刚刚创建的仓库，然后设置要显示的分支<br><img src=\"img/Pasted%20image%2020231107163852.png\"></p>\n<h3 id=\"5、打开网页查看效果-7\"><a href=\"#5、打开网页查看效果-7\" class=\"headerlink\" title=\"5、打开网页查看效果\"></a>5、打开网页查看效果</h3><p>浏览器输入<code>https://用户名.github.io</code>，将用户名换成自己的进行访问。<br><img src=\"img/Pasted%20image%2020231107171041.png\"></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-11-07T09:55:24.942Z","updated":"2023-11-06T07:54:45.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cloo9znxz0001h4n9cjazhi6j","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}